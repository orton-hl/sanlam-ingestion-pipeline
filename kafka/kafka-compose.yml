version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka-ingest:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-ingest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"  
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-ingest:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ingest-dlq:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-ingest-dlq
    depends_on:
      - zookeeper
      - kafka-ingest
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-ingest-dlq:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-logs:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-logs
    depends_on:
      - zookeeper
      - kafka-ingest
      - kafka-ingest-dlq
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-logs:9094,PLAINTEXT_HOST://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka-ingest
      - kafka-ingest-dlq
      - kafka-logs
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: wizard_test
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-ingest:9092,kafka-ingest-dlq:9093,kafka-logs:9094
      
  kafka-setup:
      image: confluentinc/cp-kafka:7.4.0
      container_name: kafka-setup
      depends_on:
        - kafka-ingest
        - kafka-ingest-dlq
        - kafka-logs
      restart: on-failure
      entrypoint: [ "/bin/sh", "-c" ]
      command: |
        "
        # Wait for Kafka brokers to be ready
        while ! kafka-topics --bootstrap-server kafka-ingest:9092 --list; do
          echo 'Waiting for Kafka brokers to be ready...'
          sleep 5
        done

        # Create topics for each broker
        # Ingest topics
        kafka-topics --create --bootstrap-server kafka-ingest:9092 --replication-factor 1 --partitions 3 --topic tpc-ingest

        # DLQ topics
        kafka-topics --create --bootstrap-server kafka-ingest-dlq:9093 --replication-factor 1 --partitions 3 --topic tpc-ingest-dlq

        # Log topics
        kafka-topics --create --bootstrap-server kafka-logs:9094 --replication-factor 1 --partitions 3 --topic tpc-ingest-logs

        echo 'All topics created successfully!'
        "
  